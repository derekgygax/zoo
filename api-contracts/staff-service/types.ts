/**
 * This file was auto-generated by openapi-typescript.
 * Do not make direct changes to the file.
 */

export interface paths {
    "/api/v1/staff": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /** Get All Staff */
        get: {
            parameters: {
                query?: never;
                header?: never;
                path?: never;
                cookie?: never;
            };
            requestBody?: never;
            responses: {
                /** @description OK */
                200: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": components["schemas"]["Staff"][];
                    };
                };
            };
        };
        put?: never;
        /** Add Staff */
        post: {
            parameters: {
                query?: never;
                header?: never;
                path?: never;
                cookie?: never;
            };
            requestBody: {
                content: {
                    "application/json": components["schemas"]["StaffBase"];
                };
            };
            responses: {
                /** @description Created */
                201: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content?: never;
                };
            };
        };
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/api/v1/staff/identifiers": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /** Get All Staff Identifiers */
        get: {
            parameters: {
                query?: never;
                header?: never;
                path?: never;
                cookie?: never;
            };
            requestBody?: never;
            responses: {
                /** @description OK */
                200: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": components["schemas"]["StaffIdentifier"][];
                    };
                };
            };
        };
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
}
export type webhooks = Record<string, never>;
export interface components {
    schemas: {
        /** Format: date-time */
        Instant: string;
        /** Format: date */
        LocalDate: string;
        Staff: {
            id?: components["schemas"]["UUID"];
            firstName?: string;
            lastName?: string;
            title?: components["schemas"]["Title"];
            email?: string;
            phoneNumber?: string;
            hireDate?: components["schemas"]["LocalDate"];
            startDate?: components["schemas"]["LocalDate"];
            createdAt?: components["schemas"]["Instant"];
            updatedAt?: components["schemas"]["Instant"];
        };
        StaffBase: {
            /**
             * First Name
             * @description Staff first name
             */
            firstName: string;
            /**
             * Last Name
             * @description Staff last name
             */
            lastName: string;
            /**
             * Title
             * @description The job title of the staff member, selected from the enum of Title
             */
            title: components["schemas"]["Title"];
            /**
             * Email
             * Format: email
             * @description Email of the staff member
             */
            email: string;
            /**
             * Phone Number
             * @description Phone number of the staff member
             */
            phoneNumber: string;
            /**
             * Hire Date
             * Format: date
             * @description The date the staff member was hired
             */
            hireDate: string;
            /**
             * Start Date
             * Format: date
             * @description The date the staff member started working
             */
            startDate: string;
        };
        StaffIdentifier: {
            /**
             * ID
             * @description Unique identifier of the staff member
             */
            id: components["schemas"]["UUID"];
            /**
             * First Name
             * @description Staff first name
             */
            firstName: string;
            /**
             * Last Name
             * @description Staff last name
             */
            lastName: string;
        };
        /** @enum {string} */
        Title: "VETERINARIAN" | "ZOOKEEPER" | "ADMINISTRATOR" | "GUIDE" | "MAINTENANCE" | "CURATOR" | "RESEARCHER" | "SECURITY" | "ATTENDANT";
        /** Format: uuid */
        UUID: string;
    };
    responses: never;
    parameters: never;
    requestBodies: never;
    headers: never;
    pathItems: never;
}
export type $defs = Record<string, never>;
export type operations = Record<string, never>;
